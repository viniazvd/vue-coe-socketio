'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var fs = _interopDefault(require('fs'));
var MagicString = _interopDefault(require('magic-string'));

var index = (function () {
  var shebang;
  var shebangRe = /^\s*(#!.*)/;

  return {
    name: 'hashbang',

    transform: function transform(code) {
      var match;

      // eslint-disable-next-line no-cond-assign
      if (match = shebangRe.exec(code)) {
        shebang = match[1];
        var str = new MagicString(code);
        str.remove(match.index, shebang.length);
        return {
          code: str.toString(),
          map: str.generateMap({ hires: true })
        };
      }

      return null;
    },

    transformBundle: function transformBundle(code) {
      if (!shebang) { return; }

      var res = {};

      var str = new MagicString(code);
      str.prepend(shebang + '\n');
      res.code = str.toString();
      res.map = str.generateMap({ hires: true });
      return res;
    },

    onwrite: function onwrite(ref) {
      var file = ref.file;

      if (shebang) {
        fs.chmodSync(file, 493 & ~process.umask());
      }
    }
  };
});

module.exports = index;
